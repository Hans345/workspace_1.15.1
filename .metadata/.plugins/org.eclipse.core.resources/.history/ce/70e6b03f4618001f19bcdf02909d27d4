#include <stdint.h>
#include <stdbool.h>
#include <stddef.h>
#include "task_handler.h"



uint8_t handler_state, prev_handler_state;
uint32_t handler_timeout;
uint32_t cycle_counter;
CONFIG_MEMORY config;

//-----------------------------------------------------------------------------------------------------------------------

void enter_handler_state(uint8_t state)
{
    switch(state){
    //--------------------------------------------------------------------------------------
        case IDLE:
        break;
    //--------------------------------------------------------------------------------------
        case LEDON:

        break;
    //--------------------------------------------------------------------------------------
        case LEDBLINK:

        break;
    //--------------------------------------------------------------------------------------
        default:
        break;
    //--------------------------------------------------------------------------------------
    }
}

//-----------------------------------------------------------------------------------------------------------------------

void exec_handler_state(uint8_t state)
{
    switch(state){
    //--------------------------------------------------------------------------------------
        case IDLE:
        break;
    //--------------------------------------------------------------------------------------
        case LEDON:

        break;
    //--------------------------------------------------------------------------------------
        case LEDBLINK:

        break;
      //--------------------------------------------------------------------------------------
      default:
      break;
      //--------------------------------------------------------------------------------------
    }
}

//-----------------------------------------------------------------------------------------------------------------------

void leave_handler_state(uint8_t state)
{
    switch(state){
    //--------------------------------------------------------------------------------------
        case IDLE:
        break;
    //--------------------------------------------------------------------------------------
        case LEDON:
        break;
    //--------------------------------------------------------------------------------------
        case LEDBLINK:
        break;
    //--------------------------------------------------------------------------------------
        default:
        break;
    //--------------------------------------------------------------------------------------
    }
}

//-----------------------------------------------------------------------------------------------------------------------

void handler_rt_task(void)
{
    if(handler_timeout > 0){
        handler_timeout--;
    }
}

void handler_task(void)
{
    exec_handler_state(handler_state);
}

void set_handler_state(uint8_t state)
{
    prev_handler_state = handler_state;
    handler_state = state;
    leave_handler_state(prev_handler_state);
    enter_handler_state(state);
}

uint8_t get_handler_state(void)
{
    return handler_state;
}


void set_handler_timeout(uint32_t timeout)
{
    handler_timeout = timeout;
}

